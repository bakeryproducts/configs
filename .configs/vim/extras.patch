diff --git a/autoload/jupyter.vim b/autoload/jupyter.vim
index ff9de49..c8ea32e 100644
--- a/autoload/jupyter.vim
+++ b/autoload/jupyter.vim
@@ -32,29 +32,24 @@ endfunction
 " See ~/.vim/bundle/jedi-vim/autoload/jedi.vim for initialization routine
 function! s:init_python() abort
     let s:init_outcome = 0
-    let init_lines =<< EOF
-# Add path
-import os
-import sys
-import vim
-vim_path, _ = os.path.split(vim.eval("expand('<sfile>:p:h')"))
-vim_pythonx_path = os.path.join(vim_path, "pythonx")
-if vim_pythonx_path not in sys.path:
-    sys.path.append(vim_pythonx_path)
-
-# Import
-try:
-    from jupyter_vim import JupyterVimSession
-    _jupyter_session = JupyterVimSession()
-
-    # For direct calls
-    from jupyter_util import str_to_py, find_jupyter_kernel_ids, find_signals
-except Exception as exc:
-    vim.bindeval('s:')['init_outcome'] = ("could not import jupyter_vim <- {0}: {1}"
-                                          .format(exc.__class__.__name__, exc))
-else:
-    vim.command('let s:init_outcome = 1')
-EOF
+    let init_lines =['import os',
+                \ 'import sys',
+                \ 'import vim',
+                \ 'vim_path, _ = os.path.split(vim.eval("expand(\\"<sfile>:p:h\\")"))',
+                \ 'vim_pythonx_path = os.path.join(vim_path, "pythonx")',
+                \ 'if vim_pythonx_path not in sys.path:',
+                \ '    sys.path.append(vim_pythonx_path)',
+                \ '',
+                \ 'try:',
+                \ '    from jupyter_vim import JupyterVimSession',
+                \ '    _jupyter_session = JupyterVimSession()',
+                \ '',
+                \ '    # For direct calls',
+                \ '    from jupyter_util import str_to_py, find_jupyter_kernel_ids, find_signals',
+                \ 'except Exception as exc:',
+                \ '    vim.bindeval("s:")["snit_outcome"] = ("could not import jupyter_vim <- {0}: {1}".format(exc.__class__.__name__, exc))',
+                \ 'else:',
+                \ '    vim.command("let s:init_outcome = 1")', ]
 
     " Try running lines via python, which will set script variable
     try
@@ -218,5 +213,18 @@ function! jupyter#UpdateEchom(timer) abort
     Pythonx _jupyter_session.vim_client.timer_echom()
 endfunction
 
+function! jupyter#SendVariable() abort
+    " Print the variable that is on the current line
+	normal! yiw
+	let variable_send = @0
+    JupyterSendCode ''.escape(variable_send, '"').''
+endfunction
+
+function! jupyter#SendTensor() abort
+    " Print the variable that is on the current line
+	normal! yiw
+	let variable_send = @0
+    JupyterSendCode ''.escape(variable_send, '"').'.shape'.','.''.escape(variable_send, '"').'.dtype'
+endfunction
 "=============================================================================
 "=============================================================================
diff --git a/autoload/jupyter/load.vim b/autoload/jupyter/load.vim
index 6ad9cbe..5871dab 100644
--- a/autoload/jupyter/load.vim
+++ b/autoload/jupyter/load.vim
@@ -14,6 +14,8 @@ function! jupyter#load#MakeStandardCommands() abort
         \ JupyterTerminateKernel  call jupyter#TerminateKernel(<bang>0, <f-args>)
     command! -buffer -nargs=* -complete=file
         \ JupyterRunFile update | call jupyter#RunFile(<f-args>)
+    command! -buffer -nargs=0    JupyterSendVariable    call jupyter#SendVariable()
+    command! -buffer -nargs=0    JupyterSendTensor    call jupyter#SendTensor()
 endfunction
 
 
